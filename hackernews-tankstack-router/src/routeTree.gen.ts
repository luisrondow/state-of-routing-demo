/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as StoriesTopRouteImport } from './routes/stories/top'
import { Route as StoriesStaticRouteImport } from './routes/stories/static'
import { Route as StoriesNewRouteImport } from './routes/stories/new'
import { Route as StoriesBestRouteImport } from './routes/stories/best'
import { Route as AuthLoginRouteImport } from './routes/auth/login'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const StoriesTopRoute = StoriesTopRouteImport.update({
  id: '/stories/top',
  path: '/stories/top',
  getParentRoute: () => rootRouteImport,
} as any)
const StoriesStaticRoute = StoriesStaticRouteImport.update({
  id: '/stories/static',
  path: '/stories/static',
  getParentRoute: () => rootRouteImport,
} as any)
const StoriesNewRoute = StoriesNewRouteImport.update({
  id: '/stories/new',
  path: '/stories/new',
  getParentRoute: () => rootRouteImport,
} as any)
const StoriesBestRoute = StoriesBestRouteImport.update({
  id: '/stories/best',
  path: '/stories/best',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/stories/best': typeof StoriesBestRoute
  '/stories/new': typeof StoriesNewRoute
  '/stories/static': typeof StoriesStaticRoute
  '/stories/top': typeof StoriesTopRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/stories/best': typeof StoriesBestRoute
  '/stories/new': typeof StoriesNewRoute
  '/stories/static': typeof StoriesStaticRoute
  '/stories/top': typeof StoriesTopRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/stories/best': typeof StoriesBestRoute
  '/stories/new': typeof StoriesNewRoute
  '/stories/static': typeof StoriesStaticRoute
  '/stories/top': typeof StoriesTopRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/login'
    | '/stories/best'
    | '/stories/new'
    | '/stories/static'
    | '/stories/top'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/login'
    | '/stories/best'
    | '/stories/new'
    | '/stories/static'
    | '/stories/top'
  id:
    | '__root__'
    | '/'
    | '/auth/login'
    | '/stories/best'
    | '/stories/new'
    | '/stories/static'
    | '/stories/top'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthLoginRoute: typeof AuthLoginRoute
  StoriesBestRoute: typeof StoriesBestRoute
  StoriesNewRoute: typeof StoriesNewRoute
  StoriesStaticRoute: typeof StoriesStaticRoute
  StoriesTopRoute: typeof StoriesTopRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/stories/top': {
      id: '/stories/top'
      path: '/stories/top'
      fullPath: '/stories/top'
      preLoaderRoute: typeof StoriesTopRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/stories/static': {
      id: '/stories/static'
      path: '/stories/static'
      fullPath: '/stories/static'
      preLoaderRoute: typeof StoriesStaticRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/stories/new': {
      id: '/stories/new'
      path: '/stories/new'
      fullPath: '/stories/new'
      preLoaderRoute: typeof StoriesNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/stories/best': {
      id: '/stories/best'
      path: '/stories/best'
      fullPath: '/stories/best'
      preLoaderRoute: typeof StoriesBestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthLoginRoute: AuthLoginRoute,
  StoriesBestRoute: StoriesBestRoute,
  StoriesNewRoute: StoriesNewRoute,
  StoriesStaticRoute: StoriesStaticRoute,
  StoriesTopRoute: StoriesTopRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
